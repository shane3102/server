name: illchess
services:
  # Game service
  game-db:
    container_name: game-db
    image: redis:7.0.11-alpine
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - caddy_master-network
  chess-game-service:
    image: shane3102/illchess-game-service
    depends_on:
      game-db:
        condition: service_healthy
    environment:
      - REDIS_HOSTNAME=6379
      - REDIS_HOSTNAME=game-db
      - SPRING_RABBITMQ_HOST=rabbit-mq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    networks:
      - caddy_master-network

  # Stockfish service
  chess-stockfish-service:
    image: shane3102/illchess-stockfish-service
    environment:
      - URLS_GAME-SERVICE=http://chess-game-service:8080
      - QUARKUS_MONGODB_CONNECTION-STRING=mongodb://root:example@stockfish-evaluations-db:27017
      - QUARKUS_MONGODB_DATABASE=stockfish-evaluations
    networks:
      - caddy_master-network
  stockfish-evaluations-db:
    container_name: stockfish-evaluations-db
    image: mongo:6.0.21
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
    networks:
      - caddy_master-network

  # Player info service
  player-info-db:
    container_name: player-info-db
    image: mysql
    environment:
      MYSQL_DATABASE: player_info_db
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'admin'
      MYSQL_ROOT_PASSWORD: 'admin'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    ports:
      - 3306:3306
    expose:
      - '3306'    
    networks:
      - caddy_master-network
  chess-player-info-service:
    image: shane3102/illchess-player-info-service
    depends_on:
      player-info-db:
        condition: service_healthy
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:mysql://player-info-db:3306/player_info_db
      - QUARKUS_DATASOURCE_USERNAME=admin
      - QUARKUS_DATASOURCE_PASSWORD=admin
      - RABBITMQ-HOST=rabbit-mq
      - RABBITMQ-PORT=5672
      - RABBITMQ-USERNAME=guest
      - RABBITMQ-PASSWORD=guest
    networks:
      - caddy_master-network

  # Api gateway
  chess-api-gateway:
    image: shane3102/illchess-gateway
    environment:
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://chess-game-service:8080
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path=/gateway/game/**
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://chess-stockfish-service:2137
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path=/gateway/stockfish/**
      SPRING_CLOUD_GATEWAY_ROUTES[2]_URI: http://chess-player-info-service:420
      SPRING_CLOUD_GATEWAY_ROUTES[2]_PREDICATES[0]: Path=/gateway/player-info/**
    networks:
      - caddy_master-network
      
  # Frontend
  chess-frontend:
    image: shane3102/illchess-frontend
    ports:
      - 4201-4201:80
    depends_on:
      chess-api-gateway:
        condition: service_started
      chess-game-service:
        condition: service_started
    networks:
      - caddy_master-network

  # Shared
  rabbit-mq:
    container_name: rabbit-mq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - caddy_master-network

networks:
  caddy_master-network:
    external: true

